<?php
// +----------------------------------------------------------------------
// | 鸣鹤CMS [ New Better  ]
// +----------------------------------------------------------------------
// | Copyright (c) 2006~2017 http://www.mhcms.net All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( 您必须获取授权才能进行使用 )
// +----------------------------------------------------------------------
// | Author: new better <1620298436@qq.com>
// +----------------------------------------------------------------------
namespace app\smallapp\controller;

use app\common\controller\AdminBase;

use app\common\model\Models;
use app\core\util\MhcmsCloud;
use app\wechat\util\WechatUtility;
use think\Config;
if (!defined('API_URL')) {
    define("API_URL", "http://cloud.bao8.org/");
}
/**
 * @property int node_type_id
 */
class AdminSmallapp extends AdminBase
{
    public $sites_smallapp = "sites_smallapp";

    private $mini_apps;
    /**
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        Config::load(CONF_PATH . 'licence.php');
        $this->mini_apps =  MhcmsCloud::get_mini_apps();
    }


    public function index()
    {
        //自定义筛选条件
        $where = [];
        //获取模型信息
        $content_model_id = $this->sites_smallapp;
        $model = set_model($content_model_id);
        /** @var Models $model_info */
        $model_info = $model->model_info;
        //data list 如果不是超级管理员 并且数据是区分站群的
        if (Models::field_exits('site_id', $content_model_id)) {
            $where['site_id'] = $this->site['id'];
        }

        //分配到当前模块
        if (Models::field_exits('module', $content_model_id)) {
            $where['module'] = ROUTE_M;
        }
        $lists = $model->where($where)->order("id desc")->paginate();
        //列表数据
        $this->view->lists = $lists;
        //fields
        $this->view->field_list = $model_info->get_admin_publish_fields();
        //model_info
        $this->view->model_info = $model_info;
        $this->view->content_model_id = $content_model_id;
        //+--------------------------------以下为系统--------------------------
        //模板替换变量
        $this->view->mapping = $this->mapping;
        return $this->view->fetch();
    }

    public function add()
    {
        global $_GPC;
        //后去模型信息
        $model = set_model($this->sites_smallapp);
        /** @var Models $model_info */
        $model_info = $model->model_info;
        //手动处理类型的模型
        if ($this->isPost() && $model_info) {
            if (isset($_GPC['_form_manual'])) {
                //手动处理数据
                $base_info = $_GPC;
            } else {
                //自动获取data分组数据
                $base_info = input('post.data/a');//get the base info
            }

            //分配到当前模块
            if (Models::field_exits('module', $this->sites_smallapp)) {
                $base_info['module'] = ROUTE_M;
            }
            $res = $model_info->add_content($base_info);
            if ($res['code'] == 1) {
                WechatUtility::create_wechat_smallapp($res['item']['id']);
                return $this->zbn_msg($res['msg'], 1, 'true', 1000, "''", "'reload_page()'");
            } else {
                return $this->zbn_msg($res['msg'], 2);
            }
        } else {

            $this->view->miniapp_lists = $this->mini_apps['miniapp_lists'];
            $this->view->list = $model_info->get_admin_publish_fields();
            $this->view->model_info = $model_info;
            return $this->view->fetch();
        }
    }

    public function edit($id)
    {

        global $_W, $_GPC;
        $model = set_model($this->sites_smallapp);
        /** @var Models $model_info */
        $model_info = $model->model_info;
        $where_s['id'] = $id;
        $where_s['site_id'] = $_W['site']['id'];
        $detail = $model->where($where_s)->find();

        if (!$detail) {
            return $this->error("对不起 越权访问");
        }
        if ($this->isPost()) {
            if (isset($_GPC['_form_manual'])) {
                //手动处理数据
                $base_info = $_GPC;
            } else {
                //自动获取data分组数据
                $base_info = input('post.data/a');//get the base info
            }

            $res = $model_info->edit_content($base_info, $where_s);
            if ($res['code'] == 1) {
                return $this->zbn_msg($res['msg'], 1, 'true', 1000, "''", "'reload_page()'");
            } else {
                return $this->zbn_msg($res['msg'], 2);
            }

        } else {
            $this->view->field_list = $model_info->get_admin_publish_fields($detail);
            $this->view->detail = $detail;

            $this->view->miniapp_lists = $this->mini_apps['miniapp_lists'];
            return $this->view->fetch();
        }
    }

    /**
     * @param $id
     * @return array
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     */
    public function delete($id)
    {
        //delete fan tables
        //delete all small app
        $small_app = set_model("sites_smallapp")->where(['id' => $id])->find();
        $this->check_admin_auth($small_app);
        // foreach small_app
        // drop sites_smallapp_fans tables
        $table_name = "sites_smallapp_fans_" . $small_app['id'];
        sql_execute("Drop Table IF EXISTS " . config('database.prefix') . $table_name);
        set_model("sites_smallapp")->where(['id' => $id])->delete();
        $ret = [];
        $ret['code'] = 1;
        $ret['msg'] = "操作完成";
        return $ret;
    }


    public function setting($id)
    {
        global $_W, $_GPC;
        $model = set_model($this->sites_smallapp);
        /** @var Models $model_info */
        $model_info = $model->model_info;
        $where_s['id'] = $id;
        $where_s['site_id'] = $_W['site']['id'];
        $detail = $model->where($where_s)->find();
        if (!$detail) {
            return $this->error("对不起 越权访问");
        }
        if ($this->isPost()) {
            if (isset($_GPC['_form_manual'])) {
                //手动处理数据
                $base_info = $_GPC;
            } else {
                //自动获取data分组数据
                $base_info = input('post.data/a');//get the base info
            }
            $data['config'] = json_encode($base_info);
            $res = $model_info->edit_content($data, $where_s);
            if ($res['code'] == 1) {
                return $this->zbn_msg($res['msg'], 1, 'true', 1000, "''", "'reload_page()'");
            } else {
                return $this->zbn_msg($res['msg'], 2);
            }

        } else {
            $this->view->field_list = $model_info->get_admin_publish_fields($detail);
            $this->view->config = mhcms_json_decode($detail['config']);
            return $this->view->fetch();
        }
    }

    public function auto_auth()
    {

        $setting = setting_load('wechat_platform');
        $this->view->url = $setting['redirect_uri'] . url('smallapp/index/auto_auth');
        return $this->view->fetch();
    }

    public function upload($id){
        //查看用户是否已经购买
        $small_app = set_model('sites_smallapp')->where(['id'=>$id])->find();

        if(!$small_app['mdoule_sign']){
            $this->message("对不起 ，您还未设置该小程序模板，请到我的小程序里面编辑小程序！");
        }
        if(!isset($this->mini_apps['miniapp_lists'][$small_app['mdoule_sign']])){
            $this->message("对不起 ，您还未拥有该小程序模板，请到小程序商城购买！");
        }
        //todo check if the app is on the fly
        $res = MhcmsCloud::get_mini_app($small_app);
        if($res['code'] == 2 ){
            //take the app to the fly
            $url = API_URL . "product/index/auto_auth";
            header("location:$url");die();
        }else{
            //show the template
            $this->mapping['id'] = $id;


            $this->view->mapping = $this->mapping;
            $this->view->res = $res;
            return $this->view->fetch();
        }

    }

    public function upload_code($id){
        $small_app = set_model('sites_smallapp')->where(['id'=>$id])->find();
        $ret = [];

        $url = API_URL . 'product/service/upload_code';
        $licence = config('licence');
        $licence['app_info'] = $small_app;
        $res = ihttp_request($url, $licence);
        $res = json_decode($res['content'], 1);

        if($res['errcode'] == 0){
            $ret['code'] = 1;
            $ret['msg'] = "OK , 上传完成以后请刷新页面获取最新的体验二维码！";
            $ret['javascript'] = "'reload_page()'";
        }else{
            $ret['code'] = 2;
            $ret['msg'] =  $res['errmsg'];
        }
        echo json_encode($ret);die();

    }

    public function commit($id){
        global $_GPC;
        $small_app = set_model('sites_smallapp')->where(['id'=>$id])->find();
        if($this->isPost()){
            $url = API_URL . 'product/service/commit';
            $licence = config('licence');
            $licence['app_info'] = $small_app;
            $licence['tag'] = $_GPC['keyword'];
            $licence['cat'] = $_GPC['cat'];
            $res = ihttp_request($url, $licence);
            $res = mhcms_json_decode($res['content']);
            if($res['errcode'] > 0){
                $this->zbn_msg("对不起 提交错误 错误代码：！" . $res['errcode'] . $res['errmsg']);
            }else{
                $this->zbn_msg("恭喜你 代码提交审核完成！");
            }
        }else{

            $url = API_URL . 'product/service/get_category';
            $licence = config('licence');
            $licence['app_info'] = $small_app;

            $res =  ihttp_request($url, $licence);
            $this->view->category = json_decode($res['content'], 1);
            return $this->view->fetch();
        }
    }

    public function uncommit($id){
        global $_GPC;
        $small_app = set_model('sites_smallapp')->where(['id'=>$id])->find();
        $url = API_URL . 'product/service/uncommit';
        $licence = config('licence');
        $licence['app_info'] = $small_app;
        $res = ihttp_request($url, $licence);
        $res = json_decode($res['content'], 1);
        if($res['errcode'] > 0){
            $this->message("每天只能撤回一次！" , 2);
        }else{
            $this->message("撤回成功！");
        }
    }

    public function publish($id){
        global $_GPC;
        $small_app = set_model('sites_smallapp')->where(['id'=>$id])->find();
        $url = API_URL . 'product/service/publish';
        $licence = config('licence');
        $licence['app_info'] = $small_app;
        $res = ihttp_request($url, $licence);
        $res = json_decode($res['content'], 1);
        if($res['errcode'] > 0){
            $this->message($res['errmsg'] , 2);
        }else{
            $this->message("发布成功！");
        }
    }
}