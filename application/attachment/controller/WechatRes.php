<?php

namespace app\attachment\controller;

use app\attachment\storges\StorgeFactory;
use app\common\controller\Base;
use app\common\model\File;
use app\common\util\wechat\wechat;
use app\wechat\util\MhcmsWechatAccountBase;
use app\wechat\util\MhcmsWechatEngine;
use think\Exception;
use think\Log;
use Qiniu\Auth;
use Qiniu\Storage\UploadManager;
use Qiniu\Storage\BucketManager;
/**
 * @property wechat wechat
 */
class WechatRes extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->user_id = (int)$this->user['id'];
        $this->file_path =  'upload_file' . DIRECTORY_SEPARATOR . $this->user_id . DIRECTORY_SEPARATOR .date( "Ymd") . DIRECTORY_SEPARATOR;
    }

    /**
     * @param $type
     * @param $media_id
     * @return array
     */
    public function download($type , $media_id)
    {

        global $_W;
        $ACCESS_TOKEN = $_W['wechat_account']->getAccessToken();

        $url = "http://api.weixin.qq.com/cgi-bin/media/get?access_token=$ACCESS_TOKEN&media_id=$media_id";
        $res = ihttp_request($url);
        $res_content = $res['content'];
        $headers = $res['headers'];
        /**
         * 'headers' =>
        array (
        'Connection' => 'close',
        'Cache-Control' => 'no-cache, must-revalidate',
        'Content-Type' => 'audio/amr',
        'Content-disposition' => 'attachment; filename="G7TuUjrMyTwIhmPNQk0URl7uYppabnD8S9aj2meTdykAlw4HJNnSdQ-sbI4dJWGr.amr"',
        'Date' => 'Sat, 25 Nov 2017 22:05:10 GMT',
        'Content-Length' => '1546',
        ),
         */
        $file_name = substr( $headers['Content-disposition'] , strpos( $headers['Content-disposition'] ,"filename=")+10 , -1);

        if(!$file_name){
            $file_name = $media_id . ".amr";
        }

        $res = self::write_file(SYS_PATH . DIRECTORY_SEPARATOR . $this->file_path . $file_name, $res_content);

        if (false !== $res) {
            //todo write database
            $data_ret['user_id'] = $this->user_id;
            $data_ret['filename'] = $file_name;
            $data_ret['url'] = $this->file_path . $file_name;
            $data_ret['filemime'] = $headers['Content-Type'];
            $data_ret['filesize'] = $headers['Content-Length'];
            $data_ret['created'] = time();
            $item = File::create($data_ret);
            $sf =  StorgeFactory::get_storge();
            $item['play_url'] = $sf->convert_amr( SYS_PATH . DIRECTORY_SEPARATOR . $this->file_path . $file_name , $media_id);
            $ret = [
                'code' => 1,
                'msg' => '音频文件处理成功！'  ,
                'data' => $item
            ];
        } else {
            $ret = [
                'code' => 0,
                'msg' => '下载文件成功，文件写入权限不足' . SYS_PATH . $this->file_path . $file_name
            ];
        }
        return $ret;
    }



    public static function write_file($path, $data)
    {
        @self::mkdirs(dirname($path));
        try{
            return file_put_contents($path, $data);
        }catch (Exception $e){
            return false;
        }
    }
    public static function mkdirs($path)
    {
        if (!is_dir($path)) {
            self::mkdirs(dirname($path));
            mkdir($path);
        }
        return is_dir($path);
    }
}