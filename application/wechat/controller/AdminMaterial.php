<?php

// +----------------------------------------------------------------------
// | 鸣鹤CMS [ New Better  ]
// +----------------------------------------------------------------------
// | Copyright (c) 2006~2017 http://www.mhcms.net All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( 您必须获取授权才能进行使用 )
// +----------------------------------------------------------------------
// | Author: new better <1620298436@qq.com>
// +----------------------------------------------------------------------

namespace app\wechat\controller;

use app\common\controller\AdminBase;
use app\common\model\Models;
use app\common\model\UserMenu;
use app\common\util\Tree2;
use app\wechat\util\MhcmsWechatAccountBase;
use app\wechat\util\MhcmsWechatEngine;
use think\Db;

class AdminMaterial extends AdminBase
{
    public $sites_wechat_material = "sites_wechat_material";
    public function _initialize()
    {
        global $_W;
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->check_admin_auth($_W['account']);
    }
    /**
     * @param string $material_type
     * @return string
     * @throws \Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function index($material_type = "news")
    {
        global $_W  ,$_GPC;
        $this->content_model_id = $this->sites_wechat_material;
        /**过滤字段*/
        $_GPC['material_type'] = $material_type;
        $ret = Models::gen_admin_filter($this->content_model_id, $this->menu_id);
        //自定义筛选条件
        $where = $ret['where'];
        $this->view->filter_info = $ret;
        //获取模型信息
        $model = set_model($this->content_model_id);
        /** @var Models $model_info */
        $model_info = $model->model_info;

        //data list 如果不是超级管理员 并且数据是区分站群的
        if (Models::field_exits('site_id', $this->content_model_id)) {
            $where['site_id'] = $this->site['id'];
        }
        $where['parent_id'] = 0;
        //分配到当前模块
        if (Models::field_exits('module', $this->content_model_id)) {
            $where['module'] = ROUTE_M;
        }
        $keyword = input('param.keyword');
        if ($keyword && $model_info['search_keys']) {
            $search_keys = str_replace(",", "|", $model_info['search_keys']);
            $model = $model->where($search_keys, 'like', "%$keyword%");
            $this->view->keyword = $keyword;
        }
        $lists = $model->where($where)->order("createtime desc")->paginate();
        //列表数据
        $this->view->lists = $lists;
        //fields
        $this->view->field_list = $model_info->get_admin_column_fields();
        //model_info
        $this->view->model_info = $model_info;
        //--------------------------------以下为系统--------------------------
        //模板替换变量
        $this->mapping['site_id'] = $_W['site']['id'];
        $this->mapping['material_type'] = $material_type;
        $this->view->mapping = $this->mapping;
        $this->view->content_model_id = $this->content_model_id;
        return $this->view->fetch("material_".$material_type);
    }


    /**
     * 同步微信素材信息
     * @param string $material_type
     * @return string
     * @throws \Exception
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     */
    public function sync($material_type = "news")
    {
        global $_W, $_GPC;
        $account_api = MhcmsWechatEngine::create($_W['account']);
        /** 索引页数*/
        $page = max(1, (int)$_GPC['page']);
        /*** 默认类型同步类型 */

        $page_size = 1;
        $news_list = $account_api->batchGetMaterial($material_type, ($page - 1) * $page_size , $page_size);

        if(!$news_list['total_count']){
            $this->error($news_list['msg']);
        }
        $total_page = 1;
        if ($news_list['total_count'] > $page_size) {
            $total_page = ceil($news_list['total_count'] / $page_size);
        }

        if ($page == 1) {
            //$original_newsid = set_model('sites_wechat_material')->where(array('sites_wechat_id' => $_W['account']['id'], 'material_type' => $material_type, 'expire' => 0))->select()->toArray();
            self::material_sync($news_list['item'], array(), $material_type);
            $this->view->total_page = $total_page;
            $next_url = $total_page > 1 ? url('wechat/admin_material/sync', ['material_type'=>$material_type , 'user_menu_id' => $this->menu_id, 'page' => 2]) : "";
            $this->view->next_url = $next_url;
            return $this->view->fetch();
        } else {
            self::material_sync($news_list['item'], [] , $material_type);
            $next_url = $total_page > $page ? url('wechat/admin_material/sync', ['material_type'=>$material_type , 'user_menu_id' => $this->menu_id, 'page' => ++ $page  ]) : "";

            $ret = [];
            if($next_url){
                $ret['next_url'] =  $next_url;
                $ret['code'] =  1;
            }else{
                $ret['next_url'] =  $next_url;
                $ret['msg'] =  "同步素材完成";
                $ret['code'] =  0;
            }
            return $ret;
        }

    }

    /**
     * @param $material
     * @param $exist_material
     * @param $type
     * @return array
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     */
    public static function material_sync($material, $exist_material, $type)
    {
        global $_W;
        $material_model = set_model('sites_wechat_material');
        $material = empty($material) ? array() : $material;
        foreach ($material as $news) {
            $media_where = array('sites_wechat_id' => $_W['account']['id'], 'media_id' => $news['media_id']);
            $material_exist = $material_model->where($media_where)->find();
            if (empty($material_exist)) {
                $material_data = array(
                    'sites_wechat_id' => $_W['account']['id'],
                    'media_id' => $news['media_id'],
                    'material_type' => $type,
                    'expire' => 0,
                    'site_id' => $_W['account']['site_id'],
                    'createtime' => $news['update_time']
                );
                if ($type == 'image') {
                    $material_data['filename'] = $news['name'];
                    $material_data['url'] = $news['url'];
                }
                if ($type == 'voice') {
                    $material_data['filename'] = $news['name'];
                }
                if ($type == 'video') {
                    $material_data['tag'] = json_encode(array('title' => $news['name']));
                }

                $material_data['material_type'] = $type;
                $material_id = $material_model->insert($material_data, false, true);
            } else {
                if ($type == 'image') {
                    $material_data = array(
                        'createtime' => $news['update_time'],
                        'url' => $news['url'],
                        'filename' => $news['name']
                    );
                }
                if ($type == 'voice') {
                    $material_data = array(
                        'createtime' => $news['update_time'],
                        'filename' => $news['name']
                    );
                }
                if ($type == 'video') {
                    $tag = empty($material_exist['tag']) ? array() : mhcms_json_decode($material_exist['tag']);
                    $material_data = array(
                        'createtime' => $news['update_time'],
                        'tag' => json_encode(array('title' => $news['name'], 'url' => $tag['url']))
                    );
                }

                $exist_material[] = $material_id = $material_exist['id'];
            }

            if ($type != 'news') {
                $material_data['site_id'] = $_W['account']['site_id'];
                $material_data['material_type'] = $type;
                $material_model->where($media_where)->update($material_data);
            } else {
                $material_model->where($media_where)->update(array('createtime' => $news['update_time']));
                //todo delete sub news
                $material_model->where(['parent_id' => $material_id])->delete();
                foreach ($news['content']['news_item'] as $key => $new) {
                    $new_data = array(
                        'sites_wechat_id' => $_W['account']['id'],
                        'media_id' => "",
                        "parent_id" => $material_id,
                        'thumb_media_id' => $new['thumb_media_id'],
                        'thumb_url' => $new['thumb_url'],
                        'title' => $new['title'],
                        'author' => $new['author'],
                        'digest' => $new['digest'],
                        'content' => $new['content'],
                        'material_type' => $type,
                        'content_source_url' => $new['content_source_url'],
                        'show_cover_pic' => $new['show_cover_pic'],
                        'url' => $new['url'],
                        'listorder' => $key,
                        'site_id' => $_W['account']['site_id'],
                    );
                    $material_model->insert($new_data);
                }
            }
        }
        return $material_id;
    }
}