<?php
// +----------------------------------------------------------------------
// | 鸣鹤CMS [ New Better  ]
// +----------------------------------------------------------------------
// | Copyright (c) 2006~2017 http://www.mhcms.net All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( 您必须获取授权才能进行使用 )
// +----------------------------------------------------------------------
// | Author: new better <1620298436@qq.com>
// +----------------------------------------------------------------------
namespace app\wechat\controller;

use app\attachment\mhcms_classes\MhcmsFile;
use app\common\controller\Base;
use app\common\model\SitesWechat;
use app\mhcms_professional\wechat\WeiXinPlatform;
use app\wechat\util\MhcmsWechatEngine;
use app\wechat\util\WechatUtility;
use think\Cache;
use think\Controller;
use think\Cookie;

class Index extends Base
{
    /**
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        $this->user_id = Cookie::get("admin_id");
    }

    /**
     * @param $site_id
     * @return string
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     */
    public function auto_auth($site_id){
        global $_W , $_GPC;
        $account_platform = new WeiXinPlatform();

        //check if there is already one
        $exist_account =SitesWechat::get(['site_id'=>$site_id]);


        if($_GPC['do'] == "success"){
            if (empty($_GPC['auth_code'])) {
                $this->error('授权登录失败，请重试');
            }

            $auth_info = $account_platform->getAuthInfo($_GPC['auth_code']);

            $auth_refresh_token = $auth_info['authorization_info']['authorizer_refresh_token'];
            $auth_appid = $auth_info['authorization_info']['authorizer_appid'];

            $account_info = $account_platform->getAccountInfo($auth_appid);

            if (!$account_info['authorizer_info']['alias']) {
                $this->error('授权登录新建公众号失败，请重试');
            }

            if ($account_info['authorizer_info']['service_type_info']['id'] == '0' || $account_info['authorizer_info']['service_type_info']['id'] == '1') {
                if ($account_info['authorizer_info']['verify_type_info']['id'] > '-1') {
                    $level = '3';
                } else {
                    $level = '1';
                }
            } elseif ($account_info['authorizer_info']['service_type_info']['id'] == '2') {
                if ($account_info['authorizer_info']['verify_type_info']['id'] > '-1') {
                    $level = '4';
                } else {
                    $level = '2';
                }
            }
            $account_found = set_model("sites_wechat")->where( array('org_id' => $account_info['authorizer_info']['user_name']))->find();


            if($exist_account && $exist_account['org_id'] != $account_info['authorizer_info']['user_name'] ){
                $this->error("对不起，一个分站只能接入一个公众号！");
            }

            //todo create wechat account
            if(!$account_found){
                $sites_wechat_data = array(
                    'type' => 3, // 授权接入
                    'isconnect' => 1,
                    'account_name' => $account_info['authorizer_info']['nick_name'],
                    'account' => $account_info['authorizer_info']['alias'],
                    'org_id' => $account_info['authorizer_info']['user_name'],
                    'level' => $level,
                    'app_id' => $auth_appid,
                    'auth_refresh_token' => $auth_refresh_token,
                    'encodingaeskey' => $account_platform->encodingaeskey,
                    'token' => $account_platform->token,
                    'site_id' => $site_id
                );

                //todo create sites_wechat
                $site_wechat_id = set_model("sites_wechat")->insert($sites_wechat_data , false , true);

                if($site_wechat_id) {
                    // create fans data tablegroup_ids
                    WechatUtility::create_wechat($site_wechat_id);
                    Cache::set('account:auth:refreshtoken:' . $site_wechat_id , $auth_refresh_token);
                    //todo save pic
                    $headimg = ihttp_request($account_info['authorizer_info']['head_img']);
                    file_put_contents(SYS_PATH . 'upload_file/headimg_'.$site_wechat_id.'.jpg', $headimg['content']);
                    $headimg_file = MhcmsFile::create('upload_file/headimg_'.$site_wechat_id.'.jpg');

                    $qrcode = ihttp_request($account_info['authorizer_info']['qrcode_url']);
                    file_put_contents(SYS_PATH . 'upload_file/qrcode_'.$site_wechat_id.'.jpg', $qrcode['content']);
                    $qrcode_file = MhcmsFile::create('upload_file/qrcode_'.$site_wechat_id.'.jpg');
                    //todo save attach file
                    $update = [];
                    $update['qrcode'] = $qrcode_file['file_id'];
                    $update['avatar'] = $headimg_file['file_id'];
                    //update sites wechat account avatar and qrcode info
                    set_model("sites_wechat")->where(['id'=>$site_wechat_id])->update($update);
                    $this->success('授权登录成功');
                }
                $this->error("创建接入数据失败！");

            }

            else{
                $update = array(
                    'auth_refresh_token' => $auth_refresh_token,
                    'encodingaeskey' => $account_platform->encodingaeskey,
                    'token' => $account_platform->token,
                    'level' => $level,
                    'app_id' => $auth_appid,
                    'isconnect' => 1 ,
                    'type' => 3
                );
                Cache::set('account:auth:refreshtoken:' . $account_found['id'] , $auth_refresh_token);
                set_model("sites_wechat")->where(['id'=>$account_found['id']])->update($update);
                $this->message('更改公众号授权接入成功' , 1 , "javascript:void(0)" );
            }
        }else{
            $authurl = $account_platform->getAuthLoginUrl($site_id);
            $this->view->authurl = $authurl;
            //header("location:$authurl");
            return $this->view->fetch();
        }
    }

}